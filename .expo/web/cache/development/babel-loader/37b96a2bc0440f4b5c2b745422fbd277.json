{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sakka/Documents/app/src/components/AuthsScreensComponets/Inputs.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input } from 'react-native-elements';\n\nvar Inputs = function (_Component) {\n  _inherits(Inputs, _Component);\n\n  var _super = _createSuper(Inputs);\n\n  function Inputs() {\n    var _this;\n\n    _classCallCheck(this, Inputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isFocused: false\n    };\n\n    _this.onFocusChange = function () {\n      _this.setState({\n        isFocused: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inputs, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [styles.container, {\n          borderColor: this.state.isFocused ? '#0779ef' : '#eee'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: this.props.name,\n        onFocus: this.onFocusChange,\n        inputContainerStyle: styles.inputContainer,\n        inputStyle: styles.inputText,\n        secureTextEntry: this.props.pass,\n        value: this.props.data,\n        onChangeText: function onChangeText(newData) {\n          _this2.props.onChange(newData);\n        },\n        leftIcon: React.createElement(Icon, {\n          name: this.props.icon,\n          size: 22,\n          color: this.state.isFocused ? '#0779e4' : 'grey',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Inputs;\n}(Component);\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    width: '90%',\n    height: 50,\n    borderRadius: 100,\n    marginVertical: 10,\n    borderWidth: 3.5\n  },\n  inputContainer: {\n    borderBottomWidth: 0\n  },\n  inputText: {\n    color: '#0779e4',\n    fontWeight: 'bold',\n    marginLeft: 5\n  }\n});\nexport default Inputs;","map":{"version":3,"sources":["/home/sakka/Documents/app/src/components/AuthsScreensComponets/Inputs.js"],"names":["React","Component","Icon","Input","Inputs","state","isFocused","onFocusChange","setState","styles","container","borderColor","props","name","inputContainer","inputText","pass","data","newData","onChange","icon","StyleSheet","create","width","height","borderRadius","marginVertical","borderWidth","borderBottomWidth","color","fontWeight","marginLeft"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,IAAP;AACA,SAAQC,KAAR,QAAoB,uBAApB;;IAEMC,M;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAACC,MAAAA,SAAS,EAAE;AAAZ,K;;UAERC,a,GAAgB,YAAM;AAClB,YAAKC,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmB;AAACC,UAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,SAAX,GAAuB,SAAvB,GAAkC;AAAhD,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAWC,IAD5B;AAEI,QAAA,OAAO,EAAE,KAAKN,aAFlB;AAGI,QAAA,mBAAmB,EAAEE,MAAM,CAACK,cAHhC;AAII,QAAA,UAAU,EAAEL,MAAM,CAACM,SAJvB;AAKI,QAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,IALhC;AAMI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,IANtB;AAOI,QAAA,YAAY,EAAE,sBAACC,OAAD,EAAW;AAAC,UAAA,MAAI,CAACN,KAAL,CAAWO,QAAX,CAAoBD,OAApB;AAA6B,SAP3D;AAQI,QAAA,QAAQ,EACJ,oBAAC,IAAD;AACI,UAAA,IAAI,EAAE,KAAKN,KAAL,CAAWQ,IADrB;AAEI,UAAA,IAAI,EAAE,EAFV;AAGI,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,SAAX,GAAuB,SAAvB,GAAmC,MAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAoBH;;;;EA5BgBL,S;;AA6BpB;AAED,IAAMQ,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,KAAK,EAAE,KADA;AAEPC,IAAAA,MAAM,EAAE,EAFD;AAGPC,IAAAA,YAAY,EAAE,GAHP;AAIPC,IAAAA,cAAc,EAAE,EAJT;AAKPC,IAAAA,WAAW,EAAE;AALN,GADkB;AAQ7Bb,EAAAA,cAAc,EAAE;AACZc,IAAAA,iBAAiB,EAAE;AADP,GARa;AAW7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGPC,IAAAA,UAAU,EAAE;AAHL;AAXkB,CAAlB,CAAf;AAkBA,eAAe3B,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport {View, StyleSheet, ScrollView} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Input} from 'react-native-elements';\n\nclass Inputs extends Component {\n    state = {isFocused: false};\n\n    onFocusChange = () => {\n        this.setState({isFocused: true})\n    }\n    \n    render() {\n        return(\n            <View style={[styles.container, {borderColor: this.state.isFocused ? '#0779ef': '#eee'}]}>\n                <Input \n                    placeholder={this.props.name}\n                    onFocus={this.onFocusChange}\n                    inputContainerStyle={styles.inputContainer}\n                    inputStyle={styles.inputText}\n                    secureTextEntry={this.props.pass}\n                    value={this.props.data}\n                    onChangeText={(newData)=>{this.props.onChange(newData)}}\n                    leftIcon= {\n                        <Icon \n                            name={this.props.icon}\n                            size={22}\n                            color={this.state.isFocused ? '#0779e4' : 'grey'}\n                        />\n                    }\n                />\n            </View>\n        );\n    };\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '90%',\n        height: 50,\n        borderRadius: 100,\n        marginVertical: 10,\n        borderWidth: 3.5\n    },\n    inputContainer: {\n        borderBottomWidth: 0\n    },\n    inputText: {\n        color: '#0779e4',\n        fontWeight: 'bold',\n        marginLeft: 5\n    }\n});\n\nexport default Inputs;"]},"metadata":{},"sourceType":"module"}