{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sakka/Documents/app/node_modules/react-native-elements/src/bottomSheet/BottomSheet.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { withTheme } from \"../config\";\nimport Button from \"../buttons/Button\";\nimport ListItem from \"../list/ListItem\";\nimport PropTypes from 'prop-types';\nvar MAX_HEIGHT = 300;\n\nvar BottomSheet = function (_Component) {\n  _inherits(BottomSheet, _Component);\n\n  var _super = _createSuper(BottomSheet);\n\n  function BottomSheet(props) {\n    var _this;\n\n    _classCallCheck(this, BottomSheet);\n\n    _this = _super.call(this, props);\n\n    _this.setVisible = function (visible) {\n      return _this.setState({\n        visible: visible\n      });\n    };\n\n    _this.createListItemObject = function (cancelButtonIndex, i, item) {\n      var _item$onPress = item.onPress,\n          _onPress = _item$onPress === void 0 ? function () {} : _item$onPress;\n\n      var obj = _objectSpread({}, cancelButtonIndex === i ? _objectSpread(_objectSpread({}, item), {}, {\n        onPress: function onPress() {\n          _this.setVisible(false);\n\n          _onPress && _onPress();\n        }\n      }) : item);\n\n      return obj;\n    };\n\n    _this.onLayout = function (event) {\n      return _this.setState({\n        listHeight: event.nativeEvent.layout.height\n      });\n    };\n\n    _this.state = {\n      visible: false,\n      listHeight: undefined\n    };\n    return _this;\n  }\n\n  _createClass(BottomSheet, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          listHeight = _this$state.listHeight;\n      var _this$props = this.props,\n          list = _this$props.list,\n          cancelButtonIndex = _this$props.cancelButtonIndex,\n          buttonProps = _this$props.buttonProps;\n      var maxHeight = listHeight < MAX_HEIGHT ? listHeight : MAX_HEIGHT;\n      return React.createElement(React.Fragment, null, React.createElement(Button, _extends({}, buttonProps, {\n        onPress: function onPress() {\n          return _this2.setVisible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      })), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.safeAreaView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: ([styles.listContainer], {\n          maxHeight: maxHeight\n        }),\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, list.map(function (item, i) {\n        return React.createElement(ListItem, _extends({\n          key: i\n        }, _this2.createListItemObject(cancelButtonIndex, i, item), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }));\n      })))))));\n    }\n  }]);\n\n  return BottomSheet;\n}(Component);\n\nvar styles = StyleSheet.create({\n  safeAreaView: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.2)'\n  },\n  modalView: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  listContainer: {\n    backgroundColor: 'white'\n  }\n});\nBottomSheet.defaultProps = {\n  list: [],\n  buttonProps: {},\n  cancelButtonIndex: null\n};\nBottomSheet.propTypes = {\n  list: PropTypes.array,\n  cancelButtonIndex: PropTypes.number,\n  buttonProps: PropTypes.object\n};\nexport { BottomSheet };\nexport default withTheme(BottomSheet, 'BottomSheet');","map":{"version":3,"sources":["/home/sakka/Documents/app/node_modules/react-native-elements/src/bottomSheet/BottomSheet.js"],"names":["React","Component","withTheme","Button","ListItem","PropTypes","MAX_HEIGHT","BottomSheet","props","setVisible","visible","setState","createListItemObject","cancelButtonIndex","i","item","onPress","obj","onLayout","event","listHeight","nativeEvent","layout","height","state","undefined","list","buttonProps","maxHeight","styles","safeAreaView","modalView","listContainer","map","StyleSheet","create","flex","backgroundColor","flexDirection","defaultProps","propTypes","array","number","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Modal,\n  SafeAreaView,\n  View,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport { withTheme } from '../config';\nimport Button from '../buttons/Button';\nimport ListItem from '../list/ListItem';\nimport PropTypes from 'prop-types';\n\nconst MAX_HEIGHT = 300;\n\nclass BottomSheet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      listHeight: undefined,\n    };\n  }\n\n  setVisible = (visible) => this.setState({ visible });\n\n  createListItemObject = (cancelButtonIndex, i, item) => {\n    const { onPress = () => {} } = item;\n    let obj = {\n      ...(cancelButtonIndex === i\n        ? {\n            ...item,\n            onPress: () => {\n              this.setVisible(false);\n              onPress && onPress();\n            },\n          }\n        : item),\n    };\n    return obj;\n  };\n\n  onLayout = (event) =>\n    this.setState({ listHeight: event.nativeEvent.layout.height });\n\n  render() {\n    const { visible, listHeight } = this.state;\n    const { list, cancelButtonIndex, buttonProps } = this.props;\n    const maxHeight = listHeight < MAX_HEIGHT ? listHeight : MAX_HEIGHT;\n\n    return (\n      <>\n        <Button {...buttonProps} onPress={() => this.setVisible(true)} />\n        <Modal animationType=\"slide\" transparent={true} visible={visible}>\n          <SafeAreaView style={styles.safeAreaView}>\n            <View style={styles.modalView}>\n              <View\n                style={([styles.listContainer], { maxHeight })}\n                onLayout={this.onLayout}\n              >\n                <ScrollView>\n                  {list.map((item, i) => (\n                    <ListItem\n                      key={i}\n                      {...this.createListItemObject(cancelButtonIndex, i, item)}\n                    />\n                  ))}\n                </ScrollView>\n              </View>\n            </View>\n          </SafeAreaView>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  safeAreaView: { flex: 1, backgroundColor: 'rgba(0,0,0,0.2)' },\n  modalView: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  listContainer: { backgroundColor: 'white' },\n});\n\nBottomSheet.defaultProps = {\n  list: [],\n  buttonProps: {},\n  cancelButtonIndex: null,\n};\n\nBottomSheet.propTypes = {\n  list: PropTypes.array,\n  cancelButtonIndex: PropTypes.number,\n  buttonProps: PropTypes.object,\n};\n\nexport { BottomSheet };\n\nexport default withTheme(BottomSheet, 'BottomSheet');\n"]},"metadata":{},"sourceType":"module"}